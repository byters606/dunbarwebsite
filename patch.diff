diff --git a/app/assets/javascripts/news.coffee b/app/assets/javascripts/news.coffee
new file mode 100644
index 0000000..24f83d1
--- /dev/null
+++ b/app/assets/javascripts/news.coffee
@@ -0,0 +1,3 @@
+# Place all the behaviors and hooks related to the matching controller here.
+# All this logic will automatically be available in application.js.
+# You can use CoffeeScript in this file: http://coffeescript.org/
diff --git a/app/assets/stylesheets/news.scss b/app/assets/stylesheets/news.scss
new file mode 100644
index 0000000..ac94a66
--- /dev/null
+++ b/app/assets/stylesheets/news.scss
@@ -0,0 +1,3 @@
+// Place all the styles related to the News controller here.
+// They will automatically be included in application.css.
+// You can use Sass (SCSS) here: http://sass-lang.com/
diff --git a/app/controllers/news_controller.rb b/app/controllers/news_controller.rb
new file mode 100644
index 0000000..6a45ea7
--- /dev/null
+++ b/app/controllers/news_controller.rb
@@ -0,0 +1,46 @@
+class NewsController < ApplicationController
+  
+  def index
+    @news = New.all
+  end
+  
+  def new
+    create
+  end
+  
+  def create
+    new = New.create(:content => 'Write the News Here')
+    new.save
+    redirect_to news_path(new)
+  end
+  
+  def show
+    id = params[:id]
+    @new = New.find_by_id(id)
+    if @new == nil
+      flash[:danger] = "new not found"
+      redirect_to news_path
+    end
+  end
+  
+  def destroy
+    @new = New.find(params[:id])
+    @new.destroy
+    flash[:notice] = "News '#{@new.content}' deleted."
+    redirect_to root_path
+  end
+
+  def update
+    new = New.find(params[:id])
+    new.update_attributes!(:content => params[:content][:content][:value])
+    render text: ""
+  end
+   
+  #def mercury_update
+  #  new = New.find(params[:id])
+  #  new.content = params[:content][:content][:value]
+  #  new.save!
+  #  render text: ""
+  #end
+
+end
\ No newline at end of file
diff --git a/app/controllers/researches_controller.rb b/app/controllers/researches_controller.rb
index 9363a96..0337d21 100644
--- a/app/controllers/researches_controller.rb
+++ b/app/controllers/researches_controller.rb
@@ -38,12 +38,7 @@ class ResearchesController < ApplicationController
     research.update_attributes!(:title => params[:content][:title][:value], 
                                 :summary => params[:content][:summary][:value],
                                 :content => params[:content][:content][:value])
-    #research.title = params[:content][:title][:value]
-    #research.summary = params[:content][:summary][:value]
-    #research.content = params[:content][:content][:value]
-    #research.save!
     render text: ""
-    #redirect_to research_path
   end
    
   def mercury_update
diff --git a/app/helpers/news_helper.rb b/app/helpers/news_helper.rb
new file mode 100644
index 0000000..9877c33
--- /dev/null
+++ b/app/helpers/news_helper.rb
@@ -0,0 +1,2 @@
+module NewsHelper
+end
diff --git a/app/models/new.rb b/app/models/new.rb
new file mode 100644
index 0000000..3d63ae8
--- /dev/null
+++ b/app/models/new.rb
@@ -0,0 +1,3 @@
+class New < ActiveRecord::Base
+  attr_accessible :content, :date
+end
diff --git a/app/views/news/index.html.haml b/app/views/news/index.html.haml
new file mode 100644
index 0000000..fea1490
--- /dev/null
+++ b/app/views/news/index.html.haml
@@ -0,0 +1,19 @@
+= content_for(:title, "News")
+%h1 News
+
+.publication_list
+  - @news.each do |new|
+    %table
+      %tr
+        %td.content
+          = link_to new.content.html_safe, news_path(new)
+          = new.date
+
+          
+          - if logged_in? && current_user_admin?
+            = button_to 'Delete', news_path(new), :method => :delete, :confirm => 'Are you sure?'
+          
+
+- if logged_in? && current_user_admin?
+  #add_new= link_to 'Add new News', new_news_path
+
diff --git a/app/views/news/show.html.haml b/app/views/news/show.html.haml
new file mode 100644
index 0000000..87ad556
--- /dev/null
+++ b/app/views/news/show.html.haml
@@ -0,0 +1,7 @@
+= content_for(:title, "News")
+.details
+  %h3 News
+  %p#content.mercury-region{"data-mercury" => "full"}
+    = @new.content.html_safe
+  = @new.date
+  %p= link_to "Edit", "/editor" + request.path, id: "edit_link", data: {save_url: mercury_update_news_path(@new)}
diff --git a/app/views/researches/index.html.haml b/app/views/researches/index.html.haml
index 94b05ea..49cda5c 100644
--- a/app/views/researches/index.html.haml
+++ b/app/views/researches/index.html.haml
@@ -16,5 +16,5 @@
           
 
 - if logged_in? && current_user_admin?
-  #add_publication= link_to 'Add new Research', new_research_path
+  #add_research= link_to 'Add new Research', new_research_path
 
diff --git a/config/routes.rb b/config/routes.rb
index 545f983..a8795e3 100644
--- a/config/routes.rb
+++ b/config/routes.rb
@@ -1,31 +1,32 @@
 Rails.application.routes.draw do
+  get 'news/index'
+
   mount Mercury::Engine => '/'
   root                'static_pages#home'
   get    'login'   => 'sessions#new'
   post   'login'   => 'sessions#create'
   get 'logout'  => 'sessions#destroy'
   
-  #get     'publications' => 'publications#index'
-  #get    'publications/new' => 'publications#new'
   resources :publications, only: [:index, :new] 
-  
-  #resources :resumes, only: [:index, :new, :create, :destroy]
   resources :publications
-  #match "publications/:id", to: 'publications#edit', via: [:post, :get]
   match "publications/:id/edit", to: 'publications#edit', via: [:post, :get]
-  #match "publications/:id/edit", to  'publications#update', via: [:put]
   delete 'logout'  => 'sessions#destroy'
   
   resources :members
 
   resources :researches
-
   resources :researches do
     member { post :mercury_update }
   end
 
   resources :account_activations, only: [:edit, :update]
   resources :password_resets,     only: [:new, :create, :edit, :update]
+
+  #resources :news
+  resources :news do
+    member { post :mercury_update }
+  end
+
   
   # The priority is based upon order of creation: first created -> highest priority.
   # See how all your routes lay out with "rake routes".
diff --git a/db/migrate/20160502163705_create_news.rb b/db/migrate/20160502163705_create_news.rb
new file mode 100644
index 0000000..dd5f458
--- /dev/null
+++ b/db/migrate/20160502163705_create_news.rb
@@ -0,0 +1,10 @@
+class CreateNews < ActiveRecord::Migration
+  def change
+    create_table :news do |t|
+      t.string :content
+      t.date :date
+
+      t.timestamps null: false
+    end
+  end
+end
diff --git a/db/migrate/20160502210602_remove_column.rb b/db/migrate/20160502210602_remove_column.rb
new file mode 100644
index 0000000..6261147
--- /dev/null
+++ b/db/migrate/20160502210602_remove_column.rb
@@ -0,0 +1,4 @@
+class RemoveColumn < ActiveRecord::Migration
+  def change
+  end
+end
diff --git a/db/schema.rb b/db/schema.rb
index 2db9ef2..c660e14 100755
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -11,7 +11,7 @@
 #
 # It's strongly recommended that you check this file into your version control system.
 
-ActiveRecord::Schema.define(version: 20160425081046) do
+ActiveRecord::Schema.define(version: 20160502210602) do
 
   # These are extensions that must be enabled in order to support this database
   enable_extension "plpgsql"
@@ -41,6 +41,13 @@ ActiveRecord::Schema.define(version: 20160425081046) do
     t.datetime "updated_at"
   end
 
+  create_table "news", force: :cascade do |t|
+    t.string   "content"
+    t.date     "date"
+    t.datetime "created_at", null: false
+    t.datetime "updated_at", null: false
+  end
+
   create_table "publications", force: :cascade do |t|
     t.string   "article"
     t.string   "contributors"
